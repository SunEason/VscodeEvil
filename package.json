{
  "name": "vscode-evil",
  "displayName": "VimEvil",
  "description": "emacs evil mode like keybindings rely on VscodeVim extension",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Keymaps"
  ],
  "activationEvents": [
		"onStartupFinished"
	],
  "main": "./dist/extension.js",
  "contributes": {
    "keybindings": [
			{ "key": "ctrl+a", "command": "extension.vim_ctrl+a", "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl && vim.mode != 'Insert'" },
			{ "key": "ctrl+k", "command": "extension.vim_ctrl+k", "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl && vim.mode != 'Insert'" },
			{ "key": "ctrl+f", "command": "extension.vim_ctrl+f", "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'" },
			{ "key": "ctrl+n", "command": "extension.vim_ctrl+n", "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl && vim.mode != 'Insert'" },
			{ "key": "ctrl+w", "command": "extension.vim_ctrl+w", "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl && vim.mode != 'Insert'" },
			{ "key": "ctrl+v", "command": "extension.vim_ctrl+v", "when": "editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl && vim.mode != 'Insert'" },
			{ "key": "ctrl+w", "command": "emacs.action.clipboardCutAction", "when": "editorTextFocus && editorHasSelection && !editorReadonly && vim.mode == 'Insert'" },
			{ "key": "ctrl+y", "command": "emacs.action.clipboardPasteAction", "when": "editorTextFocus && !editorReadonly && vim.mode == 'Insert'" },
			{ "key": "ctrl+f", "command": "cursorRight", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+f", "command": "cursorRightSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "right", "command": "cursorRight", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "right", "command": "cursorRightSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+b", "command": "cursorLeft", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+b", "command": "cursorLeftSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "left", "command": "cursorLeft", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "left", "command": "cursorLeftSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+p", "command": "cursorUp", "when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+p", "command": "cursorUpSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "up", "command": "cursorUp", "when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "up", "command": "cursorUpSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+n", "command": "cursorDown", "when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+n", "command": "cursorDownSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "down", "command": "cursorDown", "when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "down", "command": "cursorDownSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+right", "command": "cursorWordEndRight", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+right", "command": "cursorWordEndRightSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+left", "command": "cursorWordStartLeft", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+left", "command": "cursorWordStartLeftSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+a", "command": "cursorHome", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+a", "command": "cursorHomeSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+e", "command": "cursorEnd", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+e", "command": "cursorEndSelect", "when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+h", "command": "deleteLeft", "when": "editorTextFocus && vim.mode == 'Insert'" },
			{ "key": "ctrl+d", "command": "deleteRight", "when": "editorTextFocus && !editorHasSelection && vim.mode == 'Insert'" },
			{ "key": "ctrl+space", "command": "emacs.startRegionMode", "when": "editorFocus && vim.mode == 'Insert'" },
			{ "key": "ctrl+k", "command": "emacs.cutAllRight", "when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'" },
			{ "key": "ctrl+g", "command": "cancelSelection", "when": "editorFocus && editorHasSelection" },
			{ "key": "ctrl+g", "command": "emacs.exitRegionMode", "when": "inRegionMode" },
			{ "key": "ctrl+g", "command": "toggleVim", "when": "editorTextFocus && !inRegionMode && !vim.active" },
			{ "key": "ctrl+g", "command": "extension.vim_escape", "when": "editorTextFocus && !inRegionMode && vim.active" },
			{ "key": "ctrl+[", "command": "extension.vim_escape", "when": "editorTextFocus && !inRegionMode && vim.active" },
			{ "key": "ctrl+p", "command": "showPrevParameterHint", "when": "editorTextFocus && parameterHintsVisible" },
			{ "key": "ctrl+n", "command": "showNextParameterHint", "when": "editorTextFocus && parameterHintsVisible" },
			{ "key": "ctrl+p", "command": "selectPrevQuickFix", "when": "editorFocus && quickFixWidgetVisible" },
			{ "key": "ctrl+n", "command": "selectNextQuickFix", "when": "editorFocus && quickFixWidgetVisible" },
			{ "key": "ctrl+p", "command": "selectPrevSuggestion", "when": "editorTextFocus && suggestWidgetVisible" },
			{ "key": "ctrl+n", "command": "selectNextSuggestion", "when": "editorTextFocus && suggestWidgetVisible" },
			{ "key": "ctrl+p", "command": "workbench.action.quickOpenNavigatePrevious", "when": "inQuickOpen" },
			{ "key": "ctrl+n", "command": "workbench.action.quickOpenNavigateNext", "when": "inQuickOpen" },
			{ "key": "ctrl+p", "command": "workbench.action.quickOpenNavigatePrevious", "when": "!editorFocus && !inQuickOpen" },
			{ "key": "ctrl+n", "command": "workbench.action.quickOpenNavigateNext", "when": "!editorFocus && !inQuickOpen" },
			{ "key": "ctrl+g", "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+g", "command": "closeReferenceSearchEditor", "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
			{ "key": "ctrl+g", "command": "closeReferenceSearch", "when": "referenceSearchVisible && !config.editor.stablePeek" },
			{ "key": "ctrl+g", "command": "removeSecondaryCursors", "when": "editorHasMultipleSelections && editorTextFocus" },
			{ "key": "ctrl+g", "command": "closeBreakpointWidget", "when": "breakpointWidgetVisible && editorFocus" },
			{ "key": "ctrl+g", "command": "leaveSnippet", "when": "editorTextFocus && inSnippetMode" },
			{ "key": "ctrl+g", "command": "closeMarkersNavigation", "when": "editorFocus && markersNavigationVisible" },
			{ "key": "ctrl+g", "command": "closeParameterHints", "when": "editorTextFocus && parameterHintsVisible" },
			{ "key": "ctrl+g", "command": "hideSuggestWidget", "when": "editorFocus && suggestWidgetVisible" },
			{ "key": "ctrl+g", "command": "cancelRenameInput", "when": "editorFocus && renameInputVisible" },
			{ "key": "ctrl+g", "command": "closeAccessibilityHelp", "when": "accessibilityHelpWidgetVisible && editorFocus" },
			{ "key": "ctrl+g", "command": "closeReplaceInFilesWidget", "when": "replaceInputBoxFocus && searchViewletVisible" },
			{ "key": "ctrl+g", "command": "workbench.action.closeMessages", "when": "globalMessageVisible" },
			{ "key": "ctrl+g", "command": "workbench.action.closeQuickOpen", "when": "inQuickOpen" },
			{ "key": "ctrl+n", "command": "", "when": "editorTextFocus && vim.active && vim.mode != 'Insert'" },
			{ "key": "ctrl+h", "command": "", "when": "editorTextFocus && vim.active && vim.mode != 'Insert'" },
			{ "key": "ctrl+f", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+b", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+a", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+e", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+h", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+d", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+k", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+u", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+w", "command": "", "when": "!editorFocus" },
			{ "key": "ctrl+f", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+b", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+n", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+a", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+e", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+h", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+d", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+k", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+w", "command": "", "when": "editorFocus && findWidgetVisible" },
			{ "key": "ctrl+f", "command": "cursorRight", "when": "editorTextFocus && vim.active && vim.mode == 'Replace'" },
			{ "key": "ctrl+b", "command": "cursorLeft", "when": "editorTextFocus && vim.active && vim.mode == 'Replace'" },
			{ "key": "ctrl+p", "command": "cursorUp", "when": "editorTextFocus && vim.active && vim.mode == 'Replace'" },
			{ "key": "ctrl+n", "command": "cursorDown", "when": "editorTextFocus && vim.active && vim.mode == 'Replace'" },
			{ "key": "ctrl+a", "command": "cursorHome", "when": "editorTextFocus && vim.active && vim.mode == 'Replace'" },
			{ "key": "ctrl+e", "command": "cursorEnd", "when": "editorTextFocus && vim.active && vim.mode == 'Replace'" },
			{ "key": "alt+w", "command": "emacs.action.clipboardCopyAction" },
			{ "key": "alt+f", "command": "cursorWordRight", "when": "editorTextFocus && !inRegionMode" },
			{ "key": "alt+f", "command": "cursorWordRightSelect", "when": "editorTextFocus && inRegionMode" },
			{ "key": "alt+b", "command": "cursorWordLeft", "when": "editorTextFocus && !inRegionMode" },
			{ "key": "alt+b", "command": "cursorWordLeftSelect", "when": "editorTextFocus && inRegionMode" },
			{ "key": "alt+d", "command": "deleteWordRight", "when": "editorTextFocus" },
			{ "key": "alt+backspace", "command": "deleteWordLeft", "when": "editorTextFocus" },
			{ "key": "alt+h", "command": "deleteWordLeft", "when": "editorTextFocus" },

      { "key": "ctrl+alt+n", "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },
      { "key": "ctrl+x d", "command": "workbench.action.files.openFolder", "when": "openFolderWorkspaceSupport" },
      { "key": "ctrl+x r", "command": "workbench.action.openRecent" }, 
      { "key": "ctrl+x z", "command": "workbench.action.toggleZenMode" },
      { "key": "ctrl+x b", "command": "workbench.action.showAllEditors" },
      { "key": "ctrl+x ctrl+f", "command": "workbench.action.quickOpen" },
      { "key": "ctrl+x ctrl+c", "command": "workbench.action.closeWindow" },
      { "key": "ctrl+x s", "command": "workbench.action.files.save", "when": "editorTextFocus" },
      { "key": "ctrl+x ctrl+s", "command": "workbench.action.files.saveAll", "when": "editorTextFocus" },
      { "key": "ctrl+x ctrl+w", "command": "workbench.action.files.saveAs", "when": "editorTextFocus" },
      { "key": "ctrl+x k", "command": "workbench.action.closeActiveEditor" }, 
      { "key": "ctrl+x ctrl+k", "command": "workbench.action.closeAllEditors" },
      { "key": "alt+x", "command": "workbench.action.showCommands" },
      { "key": "alt+z", "command": "evil.focusOnEditor"},
      { "key": "alt+- alt+u", "command": "editor.action.transformToUppercase" },
      { "key": "alt+- alt+l", "command": "editor.action.transformToLowercase" },
      { "key": "alt+- alt+c", "command": "editor.action.transformToTitlecase" },

      { "key": "a", "command": "explorer.newFile", "when": "filesExplorerFocus && !inputFocus" },
      { "key": "shift+a", "command": "explorer.newFolder", "when": "filesExplorerFocus && !inputFocus" },
      { "key": "shift+r", "command": "renameFile", "when": "filesExplorerFocus && !inputFocus" },
      { "key": "shift+d", "command": "deleteFile", "when": "filesExplorerFocus && !inputFocus" },
      { "key": "shift+x", "command": "filesExplorer.cut", "when": "filesExplorerFocus && !inputFocus" },
      { "key": "shift+c", "command": "filesExplorer.copy", "when": "filesExplorerFocus && !inputFocus" }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.93.0",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.3.0",
    "@typescript-eslint/parser": "^8.3.0",
    "eslint": "^9.9.1",
    "typescript": "^5.5.4",
    "ts-loader": "^9.5.1",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.1.4",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1"
  }
}
